{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["URL_PREFIX_KEY","BITLY_TOKEN_KEY","App","useState","urlPrefix","setUrlPrefixState","bitlyToken","setBitlyTokenState","targetUrl","setTargetUrl","useEffect","localStorage","getItem","className","value","onChange","e","target","setItem","type","onClick","navigator","clipboard","readText","then","text","string","url","URL","_","protocol","isValidHttpUrl","d","obj","str","p","hasOwnProperty","push","encodeURIComponent","join","serialize","Error","fetch","method","mode","cache","headers","redirect","referrerPolicy","body","JSON","stringify","domain","long_url","response","json","data","link","writeText","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAIMA,EAAiB,aACjBC,EAAkB,cA+HTC,MA7Hf,WAAgB,IAAD,EAE0BC,mBAAS,IAFnC,mBAENC,EAFM,KAEKC,EAFL,OAG4BF,mBAAS,IAHrC,mBAGNG,EAHM,KAGMC,EAHN,OAIqBJ,mBAAS,IAJ9B,mBAINK,EAJM,KAIKC,EAJL,KAmFb,OALAC,qBAAU,WACRL,EAAkBM,aAAaC,QAAQZ,IAAmB,IAC1DO,EAAmBI,aAAaC,QAAQX,IAAoB,MAC3D,IAGD,sBAAKY,UAAU,wBAAf,UACE,qBAAKA,UAAU,iEAAf,0CAGA,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,OAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,aAAf,sDAGA,qBAAKA,UAAU,gCAAf,+FAGA,uBAAOA,UAAU,eAAeC,MAAOV,EAAWW,SA1FvC,SAAAC,GACnBX,EAAkBW,EAAEC,OAAOH,OAC3BH,aAAaO,QAAQlB,EAAgBgB,EAAEC,OAAOH,eA4F1C,qBAAKD,UAAU,OAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,aAAf,yBAGA,qBAAKA,UAAU,gCAAf,oTAGA,uBAAOM,KAAK,OAAON,UAAU,eAAeC,MAAOR,EAAYS,SAjGnD,SAAAC,GACpBT,EAAmBS,EAAEC,OAAOH,OAC5BH,aAAaO,QAAQjB,EAAiBe,EAAEC,OAAOH,eAmG3C,qBAAKD,UAAU,OAAf,SACE,sBAAKA,UAAU,YAAf,UACE,wBAAQA,UAAU,eAAeO,QA7EvB,WAClBC,UAAUC,UAAUC,WACjBC,MAAK,SAAAC,GACJ,GAxBiB,SAACC,GACtB,IAAIC,EAEJ,IACEA,EAAM,IAAIC,IAAIF,GACd,MAAOG,GACP,OAAO,EAGT,MAAwB,UAAjBF,EAAIG,UAAyC,WAAjBH,EAAIG,SAe/BC,CAAeN,GAAO,CACxB,IAAMO,EAAI,CACRL,IAAKF,GAEP,MAAM,GAAN,OAAUrB,EAAV,YAhBU,SAAC6B,GACjB,IAAIC,EAAM,GACV,IAAK,IAAIC,KAAKF,EACRA,EAAIG,eAAeD,IACrBD,EAAIG,KAAKC,mBAAmBH,GAAK,IAAMG,mBAAmBL,EAAIE,KAElE,OAAOD,EAAIK,KAAK,KAUaC,CAAUR,IAEjC,MAAM,IAAIS,MAAM,sBAGnBjB,MAAK,SAAAG,GACJ,GAAIA,EACF,OAAOe,MAAM,uCAAwC,CACnDC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,QAAS,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BxC,IAE7ByC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAU,CACnBC,OAAQ,SACRC,SAAU1B,SAKjBH,MAAK,SAAA8B,GACJ,OAAOA,EAASC,UAEjB/B,MAAK,SAAAgC,GACJ/C,EAAa+C,EAAKC,MAClBpC,UAAUC,UAAUoC,UAAUF,EAAKC,UAyC/B,iEACA,qBAAK5C,UAAS,iBAA0B,KAAdL,EAAmB,SAAW,GAA1C,KAAd,SAAgEA,gBC/G7DmD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.95ee0667.chunk.js","sourcesContent":["\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\n\nconst URL_PREFIX_KEY = \"url_prefix\";\nconst BITLY_TOKEN_KEY = \"bitly_token\";\n\nfunction App() {\n\n  const [urlPrefix, setUrlPrefixState] = useState(\"\");\n  const [bitlyToken, setBitlyTokenState] = useState(\"\");\n  const [targetUrl, setTargetUrl] = useState(\"\");\n\n\n  const setUrlPrefix = e => {\n    setUrlPrefixState(e.target.value);\n    localStorage.setItem(URL_PREFIX_KEY, e.target.value);\n  };\n\n  const setBitlyToken = e => {\n    setBitlyTokenState(e.target.value);\n    localStorage.setItem(BITLY_TOKEN_KEY, e.target.value);\n  };\n\n  const isValidHttpUrl = (string) => {\n    let url;\n\n    try {\n      url = new URL(string);\n    } catch (_) {\n      return false;\n    }\n\n    return url.protocol === \"http:\" || url.protocol === \"https:\";\n  };\n\n  const serialize = (obj) => {\n    var str = [];\n    for (var p in obj)\n      if (obj.hasOwnProperty(p)) {\n        str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n      }\n    return str.join(\"&\");\n  };\n\n  const generateNow = () => {\n    navigator.clipboard.readText()\n      .then(text => {\n        if (isValidHttpUrl(text)) {\n          const d = {\n            url: text\n          };\n          return `${urlPrefix}?${serialize(d)}`;\n        } else {\n          throw new Error(\"Not a valid URL\");\n        }\n      })\n      .then(url => {\n        if (url) {\n          return fetch('https://api-ssl.bitly.com/v4/shorten', {\n            method: \"POST\",\n            mode: \"cors\",\n            cache: \"no-cache\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": `Bearer ${bitlyToken}`\n            },\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n            body: JSON.stringify({\n              domain: \"bit.ly\",\n              long_url: url\n            })\n          });\n        };\n      })\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        setTargetUrl(data.link);\n        navigator.clipboard.writeText(data.link);\n      });\n  };\n\n  useEffect(() => {\n    setUrlPrefixState(localStorage.getItem(URL_PREFIX_KEY) || \"\");\n    setBitlyTokenState(localStorage.getItem(BITLY_TOKEN_KEY) || \"\");\n  }, []);\n\n  return (\n    <div className=\"container-fluid w-100\">\n      <div className=\"container-fluid bg-primary mb-3 text-white text-center h1 py-3\">\n        Utility for Lazada Retailers\n      </div>\n      <div className=\"container\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <div className=\"card-title\">\n              URL ของคุณ\n            </div>\n            <div className=\"card-subtitle mb-2 text-muted\">\n              ตัวอย่าง https://c.lazada.co.th/t/xxxxxxx\n            </div>\n            <input className=\"form-control\" value={urlPrefix} onChange={setUrlPrefix} />\n          </div>\n        </div>\n\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <div className=\"card-title\">\n              Bitly Token\n            </div>\n            <div className=\"card-subtitle mb-2 text-muted\">\n              Token นี้จะเป็นตัวอักษรยาวๆ ใช้เพื่อสร้าง short url ให้อัตโนมัติ\n            </div>\n            <input type=\"text\" className=\"form-control\" value={bitlyToken} onChange={setBitlyToken} />\n          </div>\n        </div>\n\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <button className=\"form-control\" onClick={generateNow}>ใช้ URL จาก clipboard</button>\n            <div className={`mt - 3 ${targetUrl === '' ? 'd-none' : ''} `}>{targetUrl}</div>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}